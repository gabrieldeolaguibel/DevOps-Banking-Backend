name: ie-bank-backend

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  BACKEND_WEBAPP_DEV: lemonke-be-dev
  BACKEND_WEBAPP_UAT: lemonke-be-uat
  BACKEND_WEBAPP_PROD: lemonke-be-prod
  IMAGE_NAME: backend
  KEY_VAULT_SECRET_NAME_ACR_USERNAME: "acr-username"
  KEY_VAULT_SECRET_NAME_ACR_PASSWORD: "acr-password1"
  KEY_VAULT_NAME: lemonke-kv
  DOCKER_REGISTRY_SERVER_URL: lemonkecr.azurecr.io
  REGISTRY_LOGIN_SERVER: lemonkecr
  DBHOST: 'lemonke-dbsrv'
  DBURL: 'postgres.database.azure.com'
  DBNAME: 'lemonke-db'
  DBUSER: 'maudandjannik'
  DBPASS: 'mj1234'
  AZURE_WEBAPP_NAME: lemonke-be

permissions:
  contents: read
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      ENV: ghci
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8 pytest
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python -m pytest ./tests/unit -v
          python -m pytest ./tests/functional -v
          python -m pytest --cov=iebank_api --cov-report=xml:coverage.xml
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: .

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Get docker registry credentials from Azure Key Vault"
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV
      - name: "Login to Docker Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.DOCKER_REGISTRY_SERVER_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: Set image version
        id: image-version
        run: echo "::set-output name=version::$(date +'%Y.%m.%d.%H.%M')"
      - name: "Build and push image"
        run: |
          docker build . -t ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}

  deploy-dev:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Deploy to Azure Web App - Dev"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_DEV }}
          images: "${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}"

  deploy-uat:
    if: github.event.pull_request.base.ref == 'main' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Deploy to Azure Web App - UAT"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_UAT }}
          images: "${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}"

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Deploy to Azure Web App - Prod"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_PROD }}
          images: "${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}"
